services:
  database:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}" 
    volumes:
      - ./database/database-init:/docker-entrypoint-initdb.d
    networks:
      - app-network

  backend:
    image: swipe4paws-backend:latest
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      PORT: ${PORT}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      PRIVATE_KEY_PATH: ${PRIVATE_KEY_PATH}
      PUBLIC_KEY_PATH: ${PUBLIC_KEY_PATH}
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      - database
    networks:
      - app-network
    volumes:
      - /Swipe4Paws/backend/node_modules
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /Swipe4Paws/backend
          # command: npm run dev:backend
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json

  frontend:
    image: swipe4paws-frontend:latest
    build:
      context: .
      dockerfile: frontend/Dockerfile
    environment:
      NODE_ENV: production
    depends_on:
      - backend
    ports:
      - "4200:4200"
    networks:
      - app-network
    volumes:
      - /Swipe4Paws/frontend/node_modules
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /Swipe4Paws/frontend
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json

volumes:
  postgres-data:
    driver: local

networks:
  app-network:
    driver: bridge
